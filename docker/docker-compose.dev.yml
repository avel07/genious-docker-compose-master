version: "3.3"

services:
    # Основной сервер обратный прокси
    nginx:
        build: ./config/nginx
        container_name: nginx
        ports:
            - "80:80"
            - "443:443"
            - "3000:3000"       # Порты контейнера nuxt (мы его пробросили в этот контейнер)
            - "24678:24678"     # Порты контейнера nuxt (мы его пробросили в этот контейнер)
        depends_on:
            - php
        volumes:
            # dirs
            - ../web/bitrix:/web/bitrix
            # configs
            - ./config/nginx/sites/backend.conf:/etc/nginx/templates/backend.conf:ro
            - ./config/nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./config/nginx/config/fastcgi.conf:/etc/nginx/fastcgi.conf:ro
            - ./config/nginx/config/security_headers.conf:/etc/nginx/security_headers.conf:ro
            - ./config/nginx/config/conf.d:/etc/nginx/conf.d:ro
            # Logs
            - ./logs/nginx:/var/log/nginx
        env_file:
            - ../.env
        expose:
            - "80"
        restart: always

    nuxt:
        network_mode: "service:nginx" # Объявляем сервисом nginx
        image: node:18-alpine
        working_dir: /app
        volumes:
            - ../.env:/.env:ro # @see https://nuxt.com/docs/guide/directory-structure/env
            - ../web/nuxt:/app
        env_file:
            - ../.env
        command: npm run dev:docker

    # # Как на проде
    # nuxt:
    #     # Контекст-корень для копирования nuxt в контейнер
    #     network_mode: "service:nginx" # Объявляем сервисом nginx
    #     volumes:
    #         - ../.env:/.env:ro # @see https://nuxt.com/docs/guide/directory-structure/env
    #         - ../web/nuxt:/nuxt
    #     image: node:18-alpine
    #     restart: always
    #     entrypoint: ['/bin/sh', '-c']
    #     command: ['cd nuxt && npm run build && node /nuxt/.output/server/index.mjs'] # Копируем смонтированную папку и запускам. Нужно для безшовного деплоя
    #     env_file:
    #         - ../.env

    php:
        build:
            context: ./config/php
            dockerfile: Dockerfile.8.1
        container_name: php
        links:
            - db
        depends_on:
            - db
            - memcached
        expose:
            - "9000"
        volumes:
            - ../web/bitrix:/web/bitrix
            - ./config/msmtprc:/etc/msmtprc
            - ./config/php/90-php.ini:/etc/php/8.1/fpm/conf.d/90-php.ini
            - ./config/php/90-php.ini:/etc/php/8.1/cli/conf.d/90-php.ini
            # Logs
            - ./logs/php:/var/log/php
            - ./logs/msmtp:/var/log/msmtp
        env_file:
            - ../.env
        restart: always

    db:
        image: percona/percona-server:8.0
        container_name: mysql
        expose:
            - "3306"
        volumes:
            # Configuration
            - ./config/mysql/my.cnf:/etc/my.cnf.d/my.cnf
            # Data persistence
            - ./private/mysql-data:/var/lib/mysql
            # Logs
            - ./logs/mysql:/var/log/mysql
        env_file:
            - ../.env
        cap_add:
            - SYS_NICE # CAP_SYS_NICE
        restart: always

    memcached:
        image: memcached:1-alpine
        container_name: memcached
        restart: always
        expose:
            - "11211"
